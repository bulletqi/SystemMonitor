package com.newegg.monitor.service;

import java.net.InetAddress;
import java.util.Timer;
import java.util.TimerTask;
import javax.ws.rs.core.MediaType;

import org.apache.log4j.Logger;
import org.hyperic.sigar.CpuPerc;
import org.hyperic.sigar.Mem;
import org.hyperic.sigar.Sigar;
import com.sun.jersey.api.client.Client;
import com.sun.jersey.api.client.WebResource;
import com.sun.jersey.api.representation.Form;

public class CollectService extends TimerTask{
	private static final Logger LOGGER = Logger.getLogger(CollectService.class);

	private Sigar sigar;
	private Client client;
	private WebResource webResource;
	
	public CollectService(String host){
		sigar = new Sigar();
		client = Client.create();
		webResource = client.resource(host);
		webResource.type(MediaType.APPLICATION_FORM_URLENCODED_TYPE).accept(MediaType.APPLICATION_JSON_TYPE);
	}
	
	public static void start(String rest,Integer time){
		Timer timer = new Timer();
		timer.schedule(new CollectService(rest), 0, time);
	}
	
	@Override
	public void run() {
		try {
			CpuPerc cpuPerc = sigar.getCpuPerc();
			Mem mem = sigar.getMem();
			Form form = new Form();
			InetAddress addr = InetAddress.getLocalHost();
			String host = addr.getHostAddress();
			form.add("host", host);
			int total = (int)(mem.getTotal()/1048576);
			int used = (int)(mem.getUsed()/1048576);
			form.add("totalMem", total);
			form.add("userMem", used);
			form.add("freeMem", (int)(mem.getFree()/1048576));
			form.add("combinedMem",(used * 10000 / total) / 100.00);
			form.add("userCpu", ((int) (cpuPerc.getCombined() * 10000)) / 100.00);
			form.add("sysCpu",  ((int)(cpuPerc.getSys() * 10000))  / 100.00);
			form.add("idleCpu",  ((int)(cpuPerc.getIdle() * 10000)) / 100.00);
			form.add("combinedCpu", ((int)(cpuPerc.getCombined() * 10000)) / 100.00);
	        String status = webResource.post(String.class,form);
	        if(!"true".equals(status)){
	        	LOGGER.error("POST ERROR");
	        }
		} catch (Exception e) {
			LOGGER.error("POST ERROR",e);
		}
	}
}
